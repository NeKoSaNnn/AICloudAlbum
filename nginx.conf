
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    proxy_buffer_size 40960k;
    proxy_buffers 32 40960k;
    proxy_busy_buffers_size 40960k;

    #gzip  on;

	upstream albumbackend {
        server 127.0.0.1:9192;
	}

    upstream testalbum{
        server 127.0.0.1:9191;
    }

    server {
	listen 80;
	listen 443 ssl;
	server_name localhost;

        ssl_certificate cert/6178221_mjx.ink.pem;
        ssl_certificate_key cert/6178221_mjx.ink.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    #表示使用的加密套件的类型。
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #表示使用的TLS协议的类型。
        ssl_prefer_server_ciphers on;
	location /{
		root /home/mjx/myCode/NekoToDo;
		index index.html index.htm;
	}

	error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
}

    server {
        listen  8099;
        server_name localhost;
        location /{
                root /home/mjx/myCode/NeKoSaNnn.github.io;
                index index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
}

    server {
        listen  8100;
        server_name localhost;
        location /{
                root /home/mjx/myCode/NekoToDo;
                index index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
}

server {
        listen       80;
	listen 443 ssl;
        server_name  todomb.mjx.ink;

	ssl_certificate cert/6178524_todomb.mjx.ink.pem;
        ssl_certificate_key cert/6178524_todomb.mjx.ink.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    #表示使用的加密套件的类型。
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #表示使用的TLS协议的类型。
        ssl_prefer_server_ciphers on;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
        proxy_pass https://123.56.249.89:8099;
                        proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_hide_header Server;
            proxy_set_header X-Real-IP      $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_connect_timeout      10;
            proxy_send_timeout         10;
            proxy_read_timeout         10;
            proxy_intercept_errors     on;
            proxy_buffering            off;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
}

server {
    listen 80;
    server_name  album.mjx.ink;
    location /{
        rewrite ^(.*)$  https://album.mjx.ink$1 permanent;
    }
}

server {
    listen 443 ssl;
    server_name  album.mjx.ink;

    ssl_certificate cert/6178509_album.mjx.ink.pem;
    ssl_certificate_key cert/6178509_album.mjx.ink.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

	client_max_body_size 100m;
	client_header_timeout 5m;
	client_body_timeout 1m;
	proxy_connect_timeout 60s;
	proxy_read_timeout 1m;
	proxy_send_timeout 1m;
	root /home/mjx/myCode/AICloudAlbum/Album;
	#charset koi8-r;

    #access_log  logs/host.access.log  main;
    location /{
       	 proxy_pass https://albumbackend/;
     	 proxy_http_version 1.1;
     	 proxy_set_header Upgrade $http_upgrade;
     	 proxy_set_header Connection "upgrade";
	}

 	location /static {
	   alias /home/mjx/myCode/AICloudAlbum/collect_static;
    }
}

server {
    listen 80;
    server_name  test_album.mjx.ink;

    client_max_body_size 100m;
    client_header_timeout 5m;
    client_body_timeout 1m;
    proxy_connect_timeout 60s;
    proxy_read_timeout 1m;
    proxy_send_timeout 1m;
    root /home/mjx/myCode/AICloudAlbum/Album;
    #charset koi8-r;

    #access_log  logs/host.access.log  main;
    location /{
        proxy_pass http://testalbum/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /static {
        alias /home/mjx/myCode/AICloudAlbum/collect_static;
    }
}


    server {
        listen       80;
        listen 443 ssl;
	server_name  todo.mjx.ink;
        ssl_certificate cert/6178512_todo.mjx.ink.pem;
        ssl_certificate_key cert/6178512_todo.mjx.ink.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    #表示使用的加密套件的类型。
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #表示使用的TLS协议的类型。
        ssl_prefer_server_ciphers on;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
       	proxy_pass https://123.56.249.89:8100;
                        proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_hide_header Server;
            proxy_set_header X-Real-IP      $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_connect_timeout      10;
            proxy_send_timeout         10;
            proxy_read_timeout         10;
            proxy_intercept_errors     on;
            proxy_buffering            off;
	}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
